// 클래스의 정적메소드와 속성 정의하기

class Product {
     static build(name, price) {
         const id = Math.floor(Math.random() * 1000);
         return new Product(id, name, price);
     }
     /*
        static키워드를 사용하여 build 정적 메소드를 정의함. 
        정적 메소드를 정의할 때 Math.random 함수를 사용하는데 
        Math.random 함수를 호출하면 0부터 1까지의 난수가 반환되고, 
        반환된 값에 대해서 1000을 곱하게 되고 그 결과를 floor 함수의 인자로 전달하게 되고, 
        소수점을 버려서 0부터 1000까지의 난수를 없을 수 있음.
     */

     static getTextPrice(product) {
         return (product.price * 0.1) + product.price;
     }//세금을 계산하는 정적 메소드

     constructor(id, name, price) {
         this.id = id;
         this.name = name;
         this.price = price;
     } //상품  클래스의 생성자 함수를 정의함.
 }

 class DisposableProduct extends Product { //자바스크립트의 상속! Dis... 메소드는 Products의 자식 메소드로 기존의 데이터 구조를 가져옴
     Dispose() {
         this.Disposed = true;
     }
 }//폐기하는 방법에 대해서 정의

 const gum = Product.build('껌', 1000)
 console.log(gum);

 const clothes = new DisposableProduct(1, '옷', 2000);
 const taxPrice = DisposableProduct.getTextPrice(clothes);
 console.log(taxPrice);
